<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xiyoulinux.recruitment.dao.EvaluationDAO">
  <resultMap id="BaseResultMap" type="org.xiyoulinux.recruitment.model.po.Evaluation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="join_id" jdbcType="INTEGER" property="join_id" />
    <result column="process_id" jdbcType="INTEGER" property="process_id" />
    <result column="times" jdbcType="TINYINT" property="times" />
    <result column="key_words" jdbcType="VARCHAR" property="key_words" />
    <result column="foundation" jdbcType="VARCHAR" property="foundation" />
    <result column="strength" jdbcType="VARCHAR" property="strength" />
    <result column="overall_evaluation" jdbcType="VARCHAR" property="overall_evaluation" />
    <result column="rank_id" jdbcType="INTEGER" property="rank_id" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, join_id, process_id, times, key_words, foundation, strength, overall_evaluation, 
    rank_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.xiyoulinux.recruitment.model.po.Evaluation">
    insert into evaluation (id, user_id, join_id, 
      process_id, times, key_words, 
      foundation, strength, overall_evaluation, 
      rank_id)
    values (#{id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{join_id,jdbcType=INTEGER}, 
      #{process_id,jdbcType=INTEGER}, #{times,jdbcType=TINYINT}, #{key_words,jdbcType=VARCHAR}, 
      #{foundation,jdbcType=VARCHAR}, #{strength,jdbcType=VARCHAR}, #{overall_evaluation,jdbcType=VARCHAR}, 
      #{rank_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.xiyoulinux.recruitment.model.po.Evaluation">
    insert into evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="join_id != null">
        join_id,
      </if>
      <if test="process_id != null">
        process_id,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="key_words != null">
        key_words,
      </if>
      <if test="foundation != null">
        foundation,
      </if>
      <if test="strength != null">
        strength,
      </if>
      <if test="overall_evaluation != null">
        overall_evaluation,
      </if>
      <if test="rank_id != null">
        rank_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="join_id != null">
        #{join_id,jdbcType=INTEGER},
      </if>
      <if test="process_id != null">
        #{process_id,jdbcType=INTEGER},
      </if>
      <if test="times != null">
        #{times,jdbcType=TINYINT},
      </if>
      <if test="key_words != null">
        #{key_words,jdbcType=VARCHAR},
      </if>
      <if test="foundation != null">
        #{foundation,jdbcType=VARCHAR},
      </if>
      <if test="strength != null">
        #{strength,jdbcType=VARCHAR},
      </if>
      <if test="overall_evaluation != null">
        #{overall_evaluation,jdbcType=VARCHAR},
      </if>
      <if test="rank_id != null">
        #{rank_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.xiyoulinux.recruitment.model.po.Evaluation">
    update evaluation
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="join_id != null">
        join_id = #{join_id,jdbcType=INTEGER},
      </if>
      <if test="process_id != null">
        process_id = #{process_id,jdbcType=INTEGER},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=TINYINT},
      </if>
      <if test="key_words != null">
        key_words = #{key_words,jdbcType=VARCHAR},
      </if>
      <if test="foundation != null">
        foundation = #{foundation,jdbcType=VARCHAR},
      </if>
      <if test="strength != null">
        strength = #{strength,jdbcType=VARCHAR},
      </if>
      <if test="overall_evaluation != null">
        overall_evaluation = #{overall_evaluation,jdbcType=VARCHAR},
      </if>
      <if test="rank_id != null">
        rank_id = #{rank_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.xiyoulinux.recruitment.model.po.Evaluation">
    update evaluation
    set user_id = #{user_id,jdbcType=INTEGER},
      join_id = #{join_id,jdbcType=INTEGER},
      process_id = #{process_id,jdbcType=INTEGER},
      times = #{times,jdbcType=TINYINT},
      key_words = #{key_words,jdbcType=VARCHAR},
      foundation = #{foundation,jdbcType=VARCHAR},
      strength = #{strength,jdbcType=VARCHAR},
      overall_evaluation = #{overall_evaluation,jdbcType=VARCHAR},
      rank_id = #{rank_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>